Ext.tree.TreeFilter=function(n,t){this.tree=n;this.filtered={};Ext.apply(this,t)};Ext.tree.TreeFilter.prototype={clearBlank:!1,reverse:!1,autoClear:!1,remove:!1,filter:function(n,t,i){var r,u;if(t=t||"text",typeof n=="string"){if(u=n.length,u==0&&this.clearBlank){this.clear();return}n=n.toLowerCase();r=function(i){return i.attributes[t].substr(0,u).toLowerCase()==n}}else if(n.exec)r=function(i){return n.test(i.attributes[t])};else throw"Illegal filter type, must be string or regex";this.filterBy(r,null,i)},filterBy:function(n,t,i){var f,r;i=i||this.tree.root;this.autoClear&&this.clear();var u=this.filtered,e=this.reverse,o=function(r){if(r==i)return!0;if(u[r.id])return!1;var f=n.call(t||r,r);return!f||e?(u[r.id]=r,r.ui.hide(),!1):!0};if(i.cascade(o),this.remove)for(f in u)typeof f!="function"&&(r=u[f],r&&r.parentNode&&r.parentNode.removeChild(r))},clear:function(){var r=this.tree,i=this.filtered,n,t;for(n in i)typeof n!="function"&&(t=i[n],t&&t.ui.show());this.filtered={}}}