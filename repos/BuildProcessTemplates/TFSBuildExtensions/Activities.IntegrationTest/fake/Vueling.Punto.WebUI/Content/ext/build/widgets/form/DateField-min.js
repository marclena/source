Ext.form.DateField=Ext.extend(Ext.form.TriggerField,{format:"m/d/y",altFormats:"m/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d",disabledDays:null,disabledDaysText:"Disabled",disabledDates:null,disabledDatesText:"Disabled",minValue:null,maxValue:null,minText:"The date in this field must be equal to or after {0}",maxText:"The date in this field must be equal to or before {0}",invalidText:"{0} is not a valid date - it must be in the format {1}",triggerClass:"x-form-date-trigger",defaultAutoCreate:{tag:"input",type:"text",size:"10",autocomplete:"off"},initComponent:function(){var t,i,n;if(Ext.form.DateField.superclass.initComponent.call(this),typeof this.minValue=="string"&&(this.minValue=this.parseDate(this.minValue)),typeof this.maxValue=="string"&&(this.maxValue=this.parseDate(this.maxValue)),this.ddMatch=null,this.disabledDates){for(t=this.disabledDates,i="(?:",n=0;n<t.length;n++)i+=t[n],n!=t.length-1&&(i+="|");this.ddMatch=new RegExp(i+")")}},validateValue:function(n){var u,i,f,t,r;if(n=this.formatDate(n),!Ext.form.DateField.superclass.validateValue.call(this,n))return!1;if(n.length<1)return!0;if(u=n,n=this.parseDate(n),!n)return this.markInvalid(String.format(this.invalidText,u,this.format)),!1;if(i=n.getTime(),this.minValue&&i<this.minValue.getTime())return this.markInvalid(String.format(this.minText,this.formatDate(this.minValue))),!1;if(this.maxValue&&i>this.maxValue.getTime())return this.markInvalid(String.format(this.maxText,this.formatDate(this.maxValue))),!1;if(this.disabledDays)for(f=n.getDay(),t=0;t<this.disabledDays.length;t++)if(f===this.disabledDays[t])return this.markInvalid(this.disabledDaysText),!1;return(r=this.formatDate(n),this.ddMatch&&this.ddMatch.test(r))?(this.markInvalid(String.format(this.disabledDatesText,r)),!1):!0},validateBlur:function(){return!this.menu||!this.menu.isVisible()},getValue:function(){return this.parseDate(Ext.form.DateField.superclass.getValue.call(this))||""},setValue:function(n){Ext.form.DateField.superclass.setValue.call(this,this.formatDate(this.parseDate(n)))},parseDate:function(n){var t,i,r;if(!n||n instanceof Date)return n;if(t=Date.parseDate(n,this.format),!t&&this.altFormats)for(this.altFormatsArray||(this.altFormatsArray=this.altFormats.split("|")),i=0,r=this.altFormatsArray.length;i<r&&!t;i++)t=Date.parseDate(n,this.altFormatsArray[i]);return t},onDestroy:function(){this.menu&&this.menu.destroy();this.wrap&&this.wrap.remove();Ext.form.DateField.superclass.onDestroy.call(this)},formatDate:function(n){return!n||!(n instanceof Date)?n:n.dateFormat(this.format)},menuListeners:{select:function(n,t){this.setValue(t)},show:function(){this.onFocus()},hide:function(){this.focus.defer(10,this);var n=this.menuListeners;this.menu.un("select",n.select,this);this.menu.un("show",n.show,this);this.menu.un("hide",n.hide,this)}},onTriggerClick:function(){if(!this.disabled){this.menu==null&&(this.menu=new Ext.menu.DateMenu);Ext.apply(this.menu.picker,{minDate:this.minValue,maxDate:this.maxValue,disabledDatesRE:this.ddMatch,disabledDatesText:this.disabledDatesText,disabledDays:this.disabledDays,disabledDaysText:this.disabledDaysText,format:this.format,minText:String.format(this.minText,this.formatDate(this.minValue)),maxText:String.format(this.maxText,this.formatDate(this.maxValue))});this.menu.on(Ext.apply({},this.menuListeners,{scope:this}));this.menu.picker.setValue(this.getValue()||new Date);this.menu.show(this.el,"tl-bl?")}},beforeBlur:function(){var n=this.parseDate(this.getRawValue());n&&this.setValue(n)}});Ext.reg("datefield",Ext.form.DateField)