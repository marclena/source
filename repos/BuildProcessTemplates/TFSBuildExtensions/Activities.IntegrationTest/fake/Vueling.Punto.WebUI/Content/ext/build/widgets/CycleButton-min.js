Ext.CycleButton=Ext.extend(Ext.SplitButton,{getItemText:function(n){if(n&&this.showText===!0){var t="";return this.prependText&&(t+=this.prependText),t+n.text}return undefined},setActiveItem:function(n,t){if(n){if(this.rendered){var i=this.getItemText(n);i&&this.setText(i);this.setIconClass(n.iconCls)}else this.text=this.getItemText(n),this.iconCls=n.iconCls;this.activeItem=n;t||this.fireEvent("change",this,n)}},getActiveItem:function(){return this.activeItem},initComponent:function(){var i,t,r,n;if(this.addEvents("change"),this.changeHandler){this.on("change",this.changeHandler,this.scope||this);delete this.changeHandler}for(this.itemCount=this.items.length,this.menu={cls:"x-cycle-menu",items:[]},t=0,r=this.itemCount;t<r;t++)n=this.items[t],n.group=n.group||this.id,n.itemIndex=t,n.checkHandler=this.checkHandler,n.scope=this,n.checked=n.checked||!1,this.menu.items.push(n),n.checked&&(i=n);this.setActiveItem(i,!0);Ext.CycleButton.superclass.initComponent.call(this);this.on("click",this.toggleSelected,this)},checkHandler:function(n,t){t&&this.setActiveItem(n)},toggleSelected:function(){var i,t,n;for(this.menu.render(),n=1;n<this.itemCount;n++)if(i=(this.activeItem.itemIndex+n)%this.itemCount,t=this.menu.items.itemAt(i),!t.disabled){t.setChecked(!0);break}}});Ext.reg("cycle",Ext.CycleButton)