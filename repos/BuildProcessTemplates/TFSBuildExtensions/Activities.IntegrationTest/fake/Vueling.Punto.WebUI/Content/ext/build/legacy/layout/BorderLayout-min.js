Ext.BorderLayout=function(n,t){var i,u,r;for(t=t||{},Ext.BorderLayout.superclass.constructor.call(this,n,t),this.factory=t.factory||Ext.BorderLayout.RegionFactory,i=0,u=this.factory.validRegions.length;i<u;i++)r=this.factory.validRegions[i],t[r]&&this.addRegion(r,t[r])};Ext.extend(Ext.BorderLayout,Ext.LayoutManager,{addRegion:function(n,t){if(!this.regions[n]){var i=this.factory.create(n,this,t);this.bindRegion(n,i)}return this.regions[n]},bindRegion:function(n,t){this.regions[n]=t;t.on("visibilitychange",this.layout,this);t.on("paneladded",this.layout,this);t.on("panelremoved",this.layout,this);t.on("invalidated",this.layout,this);t.on("resized",this.onRegionResized,this);t.on("collapsed",this.onRegionCollapsed,this);t.on("expanded",this.onRegionExpanded,this)},layout:function(){var v,t,i,n,b;if(!this.updating){var y=this.getViewSize(),c=y.width,p=y.height,l=c,r=p,u=0,w=0,f=this.regions,e=f.north,o=f.south,s=f.west,h=f.east,a=f.center;e&&e.isVisible()&&(t=e.getBox(),n=e.getMargins(),t.width=c-(n.left+n.right),t.x=n.left,t.y=n.top,u=t.height+t.y+n.bottom,r-=u,e.updateBox(this.safeBox(t)));o&&o.isVisible()&&(t=o.getBox(),n=o.getMargins(),t.width=c-(n.left+n.right),t.x=n.left,v=t.height+n.top+n.bottom,t.y=p-v+n.top,r-=v,o.updateBox(this.safeBox(t)));s&&s.isVisible()&&(t=s.getBox(),n=s.getMargins(),t.height=r-(n.top+n.bottom),t.x=n.left,t.y=u+n.top,i=t.width+n.left+n.right,w+=i,l-=i,s.updateBox(this.safeBox(t)));h&&h.isVisible()&&(t=h.getBox(),n=h.getMargins(),t.height=r-(n.top+n.bottom),i=t.width+n.left+n.right,t.x=c-i+n.left,t.y=u+n.top,l-=i,h.updateBox(this.safeBox(t)));a&&(n=a.getMargins(),b={x:w+n.left,y:u+n.top,width:l-(n.left+n.right),height:r-(n.top+n.bottom)},a.updateBox(this.safeBox(b)));this.el.repaint();this.fireEvent("layout",this)}},safeBox:function(n){return n.width=Math.max(0,n.width),n.height=Math.max(0,n.height),n},add:function(n,t){return n=n.toLowerCase(),this.regions[n].add(t)},remove:function(n,t){return n=n.toLowerCase(),this.regions[n].remove(t)},findPanel:function(n){var t=this.regions,i,r;for(i in t)if(typeof t[i]!="function"&&(r=t[i].getPanel(n),r))return r;return null},showPanel:function(n){var i=this.regions,r,t;for(r in i)if(t=i[r],typeof t!="function"&&t.hasPanel(n))return t.showPanel(n);return null},restoreState:function(n){n||(n=Ext.state.Manager);var t=new Ext.LayoutStateManager;t.init(this,n)},batchAdd:function(n){var t,i;this.beginUpdate();for(t in n)i=this.regions[t],i&&this.addTypedPanels(i,n[t]);this.endUpdate()},addTypedPanels:function(n,t){var i,r,u;if(typeof t=="string")n.add(new Ext.ContentPanel(t));else if(t instanceof Array)for(i=0,r=t.length;i<r;i++)this.addTypedPanels(n,t[i]);else t.events?n.add(t):(u=t.el,delete t.el,n.add(new Ext.ContentPanel(u||Ext.id(),t)))}});Ext.BorderLayout.create=function(n,t){var i=new Ext.BorderLayout(t||document.body,n),f,u,e,r,o,s;for(i.beginUpdate(),f=Ext.BorderLayout.RegionFactory.validRegions,u=0,e=f.length;u<e;u++)r=f[u],i.regions[r]&&n[r].panels&&(o=i.regions[r],s=n[r].panels,i.addTypedPanels(o,s));return i.endUpdate(),i};Ext.BorderLayout.RegionFactory={validRegions:["north","south","east","west","center"],create:function(n,t,i){if(n=n.toLowerCase(),i.lightweight||i.basic)return new Ext.BasicLayoutRegion(t,i,n);switch(n){case"north":return new Ext.NorthLayoutRegion(t,i);case"south":return new Ext.SouthLayoutRegion(t,i);case"east":return new Ext.EastLayoutRegion(t,i);case"west":return new Ext.WestLayoutRegion(t,i);case"center":return new Ext.CenterLayoutRegion(t,i)}throw'Layout region "'+n+'" not supported.';}}