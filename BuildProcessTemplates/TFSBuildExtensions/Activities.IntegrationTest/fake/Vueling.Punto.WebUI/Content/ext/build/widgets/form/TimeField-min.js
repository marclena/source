Ext.form.TimeField=Ext.extend(Ext.form.ComboBox,{minValue:null,maxValue:null,minText:"The time in this field must be equal to or after {0}",maxText:"The time in this field must be equal to or before {0}",invalidText:"{0} is not a valid time",format:"g:i A",altFormats:"g:ia|g:iA|g:i a|g:i A|h:i|g:i|H:i|ga|ha|gA|h a|g a|g A|gi|hi|gia|hia|g|H",increment:15,mode:"local",triggerAction:"all",typeAhead:!1,initComponent:function(){var n,t,i;if(Ext.form.TimeField.superclass.initComponent.call(this),typeof this.minValue=="string"&&(this.minValue=this.parseDate(this.minValue)),typeof this.maxValue=="string"&&(this.maxValue=this.parseDate(this.maxValue)),!this.store){for(n=this.parseDate(this.minValue),n||(n=(new Date).clearTime()),t=this.parseDate(this.maxValue),t||(t=(new Date).clearTime().add("mi",1439)),i=[];n<=t;)i.push([n.dateFormat(this.format)]),n=n.add("mi",this.increment);this.store=new Ext.data.SimpleStore({fields:["text"],data:i});this.displayField="text"}},getValue:function(){var n=Ext.form.TimeField.superclass.getValue.call(this);return this.formatDate(this.parseDate(n))||""},setValue:function(n){Ext.form.TimeField.superclass.setValue.call(this,this.formatDate(this.parseDate(n)))},validateValue:Ext.form.DateField.prototype.validateValue,parseDate:Ext.form.DateField.prototype.parseDate,formatDate:Ext.form.DateField.prototype.formatDate,beforeBlur:function(){var n=this.parseDate(this.getRawValue());n&&this.setValue(n.dateFormat(this.format))}});Ext.reg("timefield",Ext.form.TimeField)