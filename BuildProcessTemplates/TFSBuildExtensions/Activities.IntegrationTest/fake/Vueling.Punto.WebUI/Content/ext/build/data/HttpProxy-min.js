Ext.data.HttpProxy=function(n){Ext.data.HttpProxy.superclass.constructor.call(this);this.conn=n;this.useAjax=!n||!n.events};Ext.extend(Ext.data.HttpProxy,Ext.data.DataProxy,{getConnection:function(){return this.useAjax?Ext.Ajax:this.conn},load:function(n,t,i,r,u){if(this.fireEvent("beforeload",this,n)!==!1){var f={params:n||{},request:{callback:i,scope:r,arg:u},reader:t,callback:this.loadResponse,scope:this};this.useAjax?(Ext.applyIf(f,this.conn),this.activeRequest&&Ext.Ajax.abort(this.activeRequest),this.activeRequest=Ext.Ajax.request(f)):this.conn.request(f)}else i.call(r||this,null,u,!1)},loadResponse:function(n,t,i){if(delete this.activeRequest,!t){this.fireEvent("loadexception",this,n,i);n.request.callback.call(n.request.scope,null,n.request.arg,!1);return}var r;try{r=n.reader.read(i)}catch(u){this.fireEvent("loadexception",this,n,i,u);n.request.callback.call(n.request.scope,null,n.request.arg,!1);return}this.fireEvent("load",this,n,n.request.arg);n.request.callback.call(n.request.scope,r,n.request.arg,!0)},update:function(){},updateResponse:function(){}})