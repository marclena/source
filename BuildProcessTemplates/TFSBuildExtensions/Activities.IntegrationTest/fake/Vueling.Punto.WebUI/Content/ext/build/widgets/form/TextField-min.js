Ext.form.TextField=Ext.extend(Ext.form.Field,{grow:!1,growMin:30,growMax:800,vtype:null,maskRe:null,disableKeyFilter:!1,allowBlank:!0,minLength:0,maxLength:Number.MAX_VALUE,minLengthText:"The minimum length for this field is {0}",maxLengthText:"The maximum length for this field is {0}",selectOnFocus:!1,blankText:"This field is required",validator:null,regex:null,regexText:"",emptyText:null,emptyClass:"x-form-empty-field",initComponent:function(){Ext.form.TextField.superclass.initComponent.call(this);this.addEvents("autosize")},initEvents:function(){if(Ext.form.TextField.superclass.initEvents.call(this),this.validationEvent=="keyup"){this.validationTask=new Ext.util.DelayedTask(this.validate,this);this.el.on("keyup",this.filterValidation,this)}else if(this.validationEvent!==!1)this.el.on(this.validationEvent,this.validate,this,{buffer:this.validationDelay});if(this.selectOnFocus||this.emptyText){this.on("focus",this.preFocus,this);if(this.emptyText){this.on("blur",this.postBlur,this);this.applyEmptyText()}}if(this.maskRe||this.vtype&&this.disableKeyFilter!==!0&&(this.maskRe=Ext.form.VTypes[this.vtype+"Mask"]))this.el.on("keypress",this.filterKeys,this);if(this.grow){this.el.on("keyup",this.onKeyUp,this,{buffer:50});this.el.on("click",this.autoSize,this)}},processValue:function(n){if(this.stripCharsRe){var t=n.replace(this.stripCharsRe,"");if(t!==n)return this.setRawValue(t),t}return n},filterValidation:function(n){n.isNavKeyPress()||this.validationTask.delay(this.validationDelay)},onKeyUp:function(n){n.isNavKeyPress()||this.autoSize()},reset:function(){Ext.form.TextField.superclass.reset.call(this);this.applyEmptyText()},applyEmptyText:function(){this.rendered&&this.emptyText&&this.getRawValue().length<1&&(this.setRawValue(this.emptyText),this.el.addClass(this.emptyClass))},preFocus:function(){this.emptyText&&(this.el.dom.value==this.emptyText&&this.setRawValue(""),this.el.removeClass(this.emptyClass));this.selectOnFocus&&this.el.dom.select()},postBlur:function(){this.applyEmptyText()},filterKeys:function(n){var i=n.getKey(),r,t;(Ext.isIE||!n.isNavKeyPress()&&i!=n.BACKSPACE&&(i!=n.DELETE||n.button!=-1))&&((r=n.getCharCode(),t=String.fromCharCode(r),Ext.isIE&&(n.isSpecialKey()||!t))||this.maskRe.test(t)||n.stopEvent())},setValue:function(n){this.emptyText&&this.el&&n!==undefined&&n!==null&&n!==""&&this.el.removeClass(this.emptyClass);Ext.form.TextField.superclass.setValue.apply(this,arguments);this.applyEmptyText();this.autoSize()},validateValue:function(n){var t,i;return n.length<1||n===this.emptyText?this.allowBlank?(this.clearInvalid(),!0):(this.markInvalid(this.blankText),!1):n.length<this.minLength?(this.markInvalid(String.format(this.minLengthText,this.minLength)),!1):n.length>this.maxLength?(this.markInvalid(String.format(this.maxLengthText,this.maxLength)),!1):this.vtype&&(t=Ext.form.VTypes,!t[this.vtype](n,this))?(this.markInvalid(this.vtypeText||t[this.vtype+"Text"]),!1):typeof this.validator=="function"&&(i=this.validator(n),i!==!0)?(this.markInvalid(i),!1):this.regex&&!this.regex.test(n)?(this.markInvalid(this.regexText),!1):!0},selectText:function(n,t){var u=this.getRawValue(),i,r;u.length>0&&(n=n===undefined?0:n,t=t===undefined?u.length:t,i=this.el.dom,i.setSelectionRange?i.setSelectionRange(n,t):i.createTextRange&&(r=i.createTextRange(),r.moveStart("character",n),r.moveEnd("character",t-u.length),r.select()))},autoSize:function(){var i;if(this.grow&&this.rendered){this.metrics||(this.metrics=Ext.util.TextMetrics.createInstance(this.el));var r=this.el,n=r.dom.value,t=document.createElement("div");t.appendChild(document.createTextNode(n));n=t.innerHTML;t=null;n+="&#160;";i=Math.min(this.growMax,Math.max(this.metrics.getWidth(n)+10,this.growMin));this.el.setWidth(i);this.fireEvent("autosize",this,i)}}});Ext.reg("textfield",Ext.form.TextField)