Ext.tree.AsyncTreeNode=function(){this.loaded=!1;this.loading=!1;Ext.tree.AsyncTreeNode.superclass.constructor.apply(this,arguments);this.addEvents("beforeload","load")};Ext.extend(Ext.tree.AsyncTreeNode,Ext.tree.TreeNode,{expand:function(n,t,i){var u,f,r;if(this.loading){f=function(){this.loading||(clearInterval(u),this.expand(n,t,i))}.createDelegate(this);u=setInterval(f,200);return}if(!this.loaded){if(this.fireEvent("beforeload",this)===!1)return;if(this.loading=!0,this.ui.beforeLoad(this),r=this.loader||this.attributes.loader||this.getOwnerTree().getLoader(),r){r.load(this,this.loadComplete.createDelegate(this,[n,t,i]));return}}Ext.tree.AsyncTreeNode.superclass.expand.call(this,n,t,i)},isLoading:function(){return this.loading},loadComplete:function(n,t,i){this.loading=!1;this.loaded=!0;this.ui.afterLoad(this);this.fireEvent("load",this);this.expand(n,t,i)},isLoaded:function(){return this.loaded},hasChildNodes:function(){return this.isLeaf()||this.loaded?Ext.tree.AsyncTreeNode.superclass.hasChildNodes.call(this):!0},reload:function(n){for(this.collapse(!1,!1);this.firstChild;)this.removeChild(this.firstChild);this.childrenRendered=!1;this.loaded=!1;this.isHiddenRoot()&&(this.expanded=!1);this.expand(!1,!1,n)}})