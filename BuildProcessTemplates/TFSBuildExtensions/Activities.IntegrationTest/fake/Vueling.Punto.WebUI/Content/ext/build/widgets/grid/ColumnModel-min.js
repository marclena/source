Ext.grid.ColumnModel=function(n){this.setConfig(n,!0);this.defaultWidth=100;this.defaultSortable=!1;this.addEvents("widthchange","headerchange","hiddenchange","columnmoved","columnlockchange","configchange");Ext.grid.ColumnModel.superclass.constructor.call(this)};Ext.extend(Ext.grid.ColumnModel,Ext.util.Observable,{getColumnId:function(n){return this.config[n].id},setConfig:function(n,t){var r,u,i;if(!t)for(delete this.totalWidth,r=0,u=this.config.length;r<u;r++)i=this.config[r],i.editor&&i.editor.destroy();for(this.config=n,this.lookup={},r=0,u=n.length;r<u;r++)i=n[r],typeof i.renderer=="string"&&(i.renderer=Ext.util.Format[i.renderer]),typeof i.id=="undefined"&&(i.id=r),i.editor&&i.editor.isFormField&&(i.editor=new Ext.grid.GridEditor(i.editor)),this.lookup[i.id]=i;t||this.fireEvent("configchange",this)},getColumnById:function(n){return this.lookup[n]},getIndexById:function(n){for(var t=0,i=this.config.length;t<i;t++)if(this.config[t].id==n)return t;return-1},moveColumn:function(n,t){var i=this.config[n];this.config.splice(n,1);this.config.splice(t,0,i);this.dataMap=null;this.fireEvent("columnmoved",this,n,t)},isLocked:function(n){return this.config[n].locked===!0},setLocked:function(n,t,i){this.isLocked(n)!=t&&(this.config[n].locked=t,i||this.fireEvent("columnlockchange",this,n,t))},getTotalLockedWidth:function(){for(var n=0;n<this.config.length;n++)this.isLocked(n)&&!this.isHidden(n)&&(this.totalWidth+=this.getColumnWidth(n));return 0},getLockedCount:function(){for(var n=0,t=this.config.length;n<t;n++)if(!this.isLocked(n))return n},getColumnCount:function(n){var i,t,r;if(n===!0){for(i=0,t=0,r=this.config.length;t<r;t++)this.isHidden(t)||i++;return i}return this.config.length},getColumnsBy:function(n,t){for(var u,r=[],i=0,f=this.config.length;i<f;i++)u=this.config[i],n.call(t||this,u,i)===!0&&(r[r.length]=u);return r},isSortable:function(n){return typeof this.config[n].sortable=="undefined"?this.defaultSortable:this.config[n].sortable},getRenderer:function(n){return this.config[n].renderer?this.config[n].renderer:Ext.grid.ColumnModel.defaultRenderer},setRenderer:function(n,t){this.config[n].renderer=t},getColumnWidth:function(n){return this.config[n].width||this.defaultWidth},setColumnWidth:function(n,t,i){this.config[n].width=t;this.totalWidth=null;i||this.fireEvent("widthchange",this,n,t)},getTotalWidth:function(n){if(!this.totalWidth){this.totalWidth=0;for(var t=0,i=this.config.length;t<i;t++)(n||!this.isHidden(t))&&(this.totalWidth+=this.getColumnWidth(t))}return this.totalWidth},getColumnHeader:function(n){return this.config[n].header},setColumnHeader:function(n,t){this.config[n].header=t;this.fireEvent("headerchange",this,n,t)},getColumnTooltip:function(n){return this.config[n].tooltip},setColumnTooltip:function(n,t){this.config[n].tooltip=t},getDataIndex:function(n){return this.config[n].dataIndex},setDataIndex:function(n,t){this.config[n].dataIndex=t},findColumnIndex:function(n){for(var i=this.config,t=0,r=i.length;t<r;t++)if(i[t].dataIndex==n)return t;return-1},isCellEditable:function(n){return this.config[n].editable||typeof this.config[n].editable=="undefined"&&this.config[n].editor?!0:!1},getCellEditor:function(n){return this.config[n].editor},setEditable:function(n,t){this.config[n].editable=t},isHidden:function(n){return this.config[n].hidden},isFixed:function(n){return this.config[n].fixed},isResizable:function(n){return n>=0&&this.config[n].resizable!==!1&&this.config[n].fixed!==!0},setHidden:function(n,t){var i=this.config[n];i.hidden!==t&&(i.hidden=t,this.totalWidth=null,this.fireEvent("hiddenchange",this,n,t))},setEditor:function(n,t){this.config[n].editor=t}});Ext.grid.ColumnModel.defaultRenderer=function(n){return typeof n=="string"&&n.length<1?"&#160;":n};Ext.grid.DefaultColumnModel=Ext.grid.ColumnModel