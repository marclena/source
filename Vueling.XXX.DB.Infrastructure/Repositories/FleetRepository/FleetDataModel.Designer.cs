//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Vueling.XXX.DB.Infrastructure.Repositories.FleetRepository
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class FleetDbEntities : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto FleetDbEntities usando la cadena de conexión encontrada en la sección 'FleetDbEntities' del archivo de configuración de la aplicación.
        /// </summary>
        public FleetDbEntities() : base("name=FleetDbEntities", "FleetDbEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto FleetDbEntities.
        /// </summary>
        public FleetDbEntities(string connectionString) : base(connectionString, "FleetDbEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto FleetDbEntities.
        /// </summary>
        public FleetDbEntities(EntityConnection connection) : base(connection, "FleetDbEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Aircraft> Aircraft
        {
            get
            {
                if ((_Aircraft == null))
                {
                    _Aircraft = base.CreateObjectSet<Aircraft>("Aircraft");
                }
                return _Aircraft;
            }
        }
        private ObjectSet<Aircraft> _Aircraft;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Aircraft. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToAircraft(Aircraft aircraft)
        {
            base.AddObject("Aircraft", aircraft);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FleetDbModel", Name="Aircraft")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aircraft : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Aircraft.
        /// </summary>
        /// <param name="flightNumber">Valor inicial de la propiedad FlightNumber.</param>
        /// <param name="departureDate">Valor inicial de la propiedad DepartureDate.</param>
        /// <param name="seats">Valor inicial de la propiedad Seats.</param>
        /// <param name="lastUpdate">Valor inicial de la propiedad LastUpdate.</param>
        public static Aircraft CreateAircraft(global::System.String flightNumber, global::System.DateTime departureDate, global::System.String seats, global::System.DateTime lastUpdate)
        {
            Aircraft aircraft = new Aircraft();
            aircraft.FlightNumber = flightNumber;
            aircraft.DepartureDate = departureDate;
            aircraft.Seats = seats;
            aircraft.LastUpdate = lastUpdate;
            return aircraft;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightNumber
        {
            get
            {
                return _FlightNumber;
            }
            set
            {
                if (_FlightNumber != value)
                {
                    OnFlightNumberChanging(value);
                    ReportPropertyChanging("FlightNumber");
                    _FlightNumber = StructuralObject.SetValidValue(value, false, "FlightNumber");
                    ReportPropertyChanged("FlightNumber");
                    OnFlightNumberChanged();
                }
            }
        }
        private global::System.String _FlightNumber;
        partial void OnFlightNumberChanging(global::System.String value);
        partial void OnFlightNumberChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureDate
        {
            get
            {
                return _DepartureDate;
            }
            set
            {
                if (_DepartureDate != value)
                {
                    OnDepartureDateChanging(value);
                    ReportPropertyChanging("DepartureDate");
                    _DepartureDate = StructuralObject.SetValidValue(value, "DepartureDate");
                    ReportPropertyChanged("DepartureDate");
                    OnDepartureDateChanged();
                }
            }
        }
        private global::System.DateTime _DepartureDate;
        partial void OnDepartureDateChanging(global::System.DateTime value);
        partial void OnDepartureDateChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusySeats
        {
            get
            {
                return _BusySeats;
            }
            set
            {
                OnBusySeatsChanging(value);
                ReportPropertyChanging("BusySeats");
                _BusySeats = StructuralObject.SetValidValue(value, true, "BusySeats");
                ReportPropertyChanged("BusySeats");
                OnBusySeatsChanged();
            }
        }
        private global::System.String _BusySeats;
        partial void OnBusySeatsChanging(global::System.String value);
        partial void OnBusySeatsChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value, false, "Seats");
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private global::System.String _Seats;
        partial void OnSeatsChanging(global::System.String value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value, "LastUpdate");
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();

        #endregion

    }

    #endregion

}
